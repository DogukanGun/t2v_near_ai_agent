name: Lint, Format and Test

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint black isort pytest pytest-asyncio

      - name: Wait for MongoDB to be ready
        run: |
          until curl -s http://localhost:27017 > /dev/null; do
            echo "Waiting for MongoDB to be ready..."
            sleep 2
          done

      - name: Auto-fix code style
        working-directory: backend
        run: |
          black .
          isort .

      - name: Lint code with pylint
        working-directory: backend
        run: |
          pylint --rcfile=.pylintrc $(git ls-files '*.py')

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio

      - name: Wait for MongoDB to be ready
        run: |
          until curl -s http://localhost:27017 > /dev/null; do
            echo "Waiting for MongoDB to be ready..."
            sleep 2
          done

      - name: Run tests
        working-directory: backend
        env:
          MONGODB_URI: mongodb://localhost:27017
          DATABASE_NAME: test_db
          OS: test
          OTP_SECRET: test_otp_secret_key_for_testing_only
          SECRET_KEY: test_secret_key_for_testing_only
          EMAIL: test@example.com
          EMAIL_PASSWORD: test_password
          ALGORITHM: HS256
          CONNECTION_STRING: mongodb://localhost:27017
        run: |
          pytest